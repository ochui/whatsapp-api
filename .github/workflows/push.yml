name: CI/CD Pipeline for Push to Master
on:
  push:
    branches:
      - master

jobs:
  postgres:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        # env:
        #   CI_DB_USERNAME: postgres
        #   CI_DB_HOST: postgres
        #   CI_DB_PASSWORD: 1234567890
        #   CI_DB_PORT: 5432
        #   CI_DB_NAME: wapi_test

    steps:
      - name: Wait for PostgreSQL
        run: |
          until pg_isready --username=postgres; do
            echo "Waiting for PostgreSQL to start..."
            sleep 2
          done

      - name: Create Test Database
        run: |
          psql  -U postgres -d postgres -c ""CREATE USER wapi_test_user WITH ENCRYPTED PASSWORD '1234567890';"
          psql  -U postgres -d postgres -c "CREATE DATABASE wapi_test;"
          psql  -U postgres -d postgres -c "GRANT ALL PRIVILEGES ON DATABASE wapi_test TO wapi_test_user;"

  test:
    runs-on: ubuntu-latest
    needs: postgres
    strategy:
      matrix:
        node-version:
          - 14.x

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: "Use Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node-version }}"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        env:
          CI_DB_USERNAME: postgres
          CI_DB_HOST: postgres
          CI_DB_PASSWORD: 1234567890
          CI_DB_PORT: 5432
          CI_DB_NAME: wapi_test
          NODE_ENV: test
        run: yarn test
        timeout-minutes: 5

  # docker:
  #   needs: postgres
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Fetch latest wwebjs tag
  #       id: fetch-wwebjs-tag
  #       run: |
  #         repo="pedroslopez/whatsapp-web.js"
  #         latest_tag=$(curl -s "https://api.github.com/repos/$repo/tags" | jq -r .[0].name)
  #         docker_friendly_tag=$(echo "$latest_tag" | tr '.-' '__')
  #         echo "tag=$docker_friendly_tag" >> "$GITHUB_OUTPUT"

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: "${{ secrets.DOCKER_HUB_USERNAME }}"
  #         password: "${{ secrets.DOCKER_HUB_TOKEN }}"

  #     - name: Actual tag from fetch-tag job
  #       run: |
  #         echo "Tag from fetch-tag job: ${{ steps.fetch-wwebjs-tag.outputs.tag }}"

  #     - name: Build and push with dynamic tag
  #       uses: docker/build-push-action@v4
  #       with:
  #         platforms: linux/amd64,linux/arm64,linux/arm/v7
  #         push: true
  #         tags: |
  #           chrishubert/whatsapp-web-api:${{ steps.fetch-wwebjs-tag.outputs.tag }}
  #           chrishubert/whatsapp-web-api:latest
